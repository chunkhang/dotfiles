snippet cl
console.log($1)
endsnippet

snippet cll
console.log('$1:', $1)
endsnippet

snippet ctl
console.tron.logImportant($1)
endsnippet

snippet ctll
console.tron.display({ important: true, preview: \`$1: \${JSON.stringify($1)}\`, value: $1 })
endsnippet

snippet component
import React from 'react'
import PropTypes from 'prop-types'
import { connect } from 'react-redux'

class $1 extends React.Component {
  static propTypes = {
    $2
  }

  state = {
    $3
  }

  render() {
    return (
      $4
    )
  }
}

const mapStateToProps = state => ({
  $5
})

const mapDispatchToProps = dispatch => ({
  $6
})

export default connect(mapStateToProps, mapDispatchToProps)($1)
endsnippet

snippet text
<Textfield
  label="$1"
  floatingLabel
  value={this.state.$2}
  onChange={evt => this.setState({ $2: evt.target.value })}
/>
endsnippet

snippet button
<Button
  raised
  colored
  ripple
  onClick={(evt) => {
    evt.preventDefault()
    $2
  }}
>
  $1
</Button>
endsnippet

snippet select
<SelectField
  label="$1"
  value={this.state.$2}
  onChange={value => this.setState({ $2: value })}
>
  <Option
    key={}
    value={}
  >
    Option
  </Option>
</SelectField>
endsnippet

snippet styles
const styles = {
  $1
}

export default styles
endsnippet

snippet desc
describe('$1', () => {
  $2
})
endsnippet

snippet it
it('$1', async () => {
  $2
})
endsnippet

snippet =>
= () => {
  $1
}
endsnippet

snippet cn
className={$1}
endsnippet

snippet req
const $1 = require('$1')
endsnippet

snippet imp
import $1 from '$1'
endsnippet

snippet exp
export default $1
endsnippet

snippet use
useEffect(() => {
  $1
}, [])
endsnippet

snippet //
/* $1 */
endsnippet
